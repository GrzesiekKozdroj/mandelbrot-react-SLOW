{"version":3,"sources":["mandelbrot.jsx","App.js","index.js"],"names":["MakeMandelbrotSet","canvasRef","React","createRef","stajl","display","position","top","left","margin","padding","className","style","this","ref","canvas","current","width","window","innerWidth","height","innerHeight","ctx","getContext","setTimeout","checkIfBelongsToMandelbrotSet","x","y","realComponentOfResult","imaginaryComponentOfResult","i","tempImaginaryComponent","belongsToSet","fillStyle","fillRect","Component","stylez","justifyContent","App","ReactDOM","render","document","getElementById"],"mappings":"qMAiEeA,E,YA/DX,aAAc,IAAD,8BACT,+CACKC,UAAYC,IAAMC,YACvB,EAAKC,MAAQ,CACTC,QAAQ,QACRC,SAAS,WACTC,IAAI,EACJC,KAAK,EACLC,OAAQ,YACRC,QAAQ,GATH,E,sEAcT,OAAO,4BAAQC,UAAU,aAAaC,MAAOC,KAAKT,MAAOU,IAAKD,KAAKZ,c,0CAGvE,IAAMc,EAASF,KAAKZ,UAAUe,QAC9BD,EAAOE,MAAQC,OAAOC,WAAY,EAClCJ,EAAOK,OAASF,OAAOG,YAAa,EACpC,IAAMC,EAAMP,EAAOQ,WAAW,MAE9BC,YAAW,WACT,SAASC,EAA8BC,EAAEC,GAKvC,IAJA,IAAIC,EAAwBF,EACxBG,EAA6BF,EAGxBG,EAAI,EAAGA,EADM,IACaA,IAAK,CACtC,IACMC,EAAyB,EAAMH,EAAwBC,EAA6BF,EAI1F,IAHAC,EAF0BA,EAAwBA,EAAwBC,EAA8BA,EAA6BH,IAGrIG,EAA6BE,GAE4B,EACxD,OAAQD,EARW,IAQS,IAI/B,OAAO,EAOT,IAHA,IAGSJ,EAAI,EAAGA,EAAIX,EAAOE,MAAOS,IAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAOK,OAAQO,IAAK,CACtC,IAAMK,EAAeP,EAA8BC,EAL3B,KACf,KAI0EC,EAL3D,KAEf,MAIY,IAAjBK,GACFV,EAAIW,UAAY,UAEhBX,EAAIY,SAASR,EAAEC,EAAG,EAAE,KAEpBL,EAAIW,UAAY,kBAAmBD,EAAe,GAAK,KAEvDV,EAAIY,SAASR,EAAEC,EAAG,EAAE,OAI1B,S,GA7D0BQ,aCC1BC,EAAS,CACb/B,QAAQ,OACRgC,eAAe,UAYFC,MATf,WACE,OACE,yBAAK1B,MAAOwB,EAAQzB,UAAU,OAC5B,yDACA,kBAAC,EAAD,QCPN4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d86d0cfb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass MakeMandelbrotSet extends Component {\n    constructor(){\n        super()\n        this.canvasRef = React.createRef()\n        this.stajl = {\n            display:\"block\",\n            position:\"absolute\",\n            top:0,\n            left:0,\n            margin: \"auto auto\",\n            padding:0\n        }\n    }\n\n    render() {\n        return <canvas className=\"mandelbrot\" style={this.stajl} ref={this.canvasRef}/>\n    }\n    componentDidMount() {\n    const canvas = this.canvasRef.current\n    canvas.width = window.innerWidth -3\n    canvas.height = window.innerHeight -3\n    const ctx = canvas.getContext('2d')  //// 3 - access node using .current\n      // Start drawing\n    setTimeout(()=>{\n      function checkIfBelongsToMandelbrotSet(x,y) {\n        let realComponentOfResult = x;\n        let imaginaryComponentOfResult = y;\n        // Set max number of iterations\n        const maxIterations = 320;\n        for (let i = 0; i < maxIterations; i++) {\n          const tempRealComponent = realComponentOfResult * realComponentOfResult - imaginaryComponentOfResult *  imaginaryComponentOfResult + x;\n          const tempImaginaryComponent = 2.0 * realComponentOfResult * imaginaryComponentOfResult + y;\n          realComponentOfResult = tempRealComponent;\n          imaginaryComponentOfResult = tempImaginaryComponent;\n          // Return a number as a percentage\n          if (realComponentOfResult * imaginaryComponentOfResult > 5) {\n           return (i / maxIterations * 100);\n          }\n        }\n        // Return zero if in set\n        return 0;\n      }\n\n      // Set appearance settings\n      const magnificationFactor = 35000;\n      const panX = .734;\n      const panY = .365;\n      for (let x = 0; x < canvas.width; x++) {\n        for (let y = 0; y < canvas.height; y++) {\n          const belongsToSet = checkIfBelongsToMandelbrotSet(x / magnificationFactor - panX, y / magnificationFactor - panY);\n          if (belongsToSet === 0) {\n            ctx.fillStyle = '#141414';\n            // Draw a black pixel\n            ctx.fillRect(x,y, 1,1);\n          } else {\n            ctx.fillStyle = 'hsl(124,100%, '+ (belongsToSet + 4) + '%)';\n            // Draw a colorful pixel\n            ctx.fillRect(x,y, 1,1);\n          }\n        }\n      }\n    },3000)\n}\n}\nexport default MakeMandelbrotSet","import React from 'react';\nimport Mandelbrot from './mandelbrot.jsx'\nconst stylez = {\n  display:'flex',\n  justifyContent:'center'\n}\n\nfunction App() {\n  return (\n    <div style={stylez} className=\"App\">\n      <h2>Give it approx 12 sec....</h2>\n      <Mandelbrot/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}